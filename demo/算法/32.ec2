# m_s 是模数序列；
# r_s 是余数序列；
# n 是模数或余数的数量（n > 1）；
# max 是测试最大值
算始 孙子定理朴素解法灵活版 (m_s, r_s, n, max)
    n,max := 整数(n),整数(max)
    m_s,r_s := 解析(m_s),解析(r_s)
    # 找到最小的余数
    x := r_s[0]
    i := 1
    当始 (i < n)
        若始 (r_s[i] < x)
            x := r_s[i]
        若终
        i := i + 1
    当终

    # 找到最小的模数作为递增值
    d := m_s[0]
    i := 1
    当始 (i < n)
        若始 (m_s[i] < d)
            d := m_s[i]
        若终
        i := i + 1
    当终

    当始 (x < max)

        # 该变量用来记录当前 x 满足的同余条件之数量
        k := 0

        i := 0
        当始 (i < n)
            若始 (x % m_s[i] == r_s[i])
                k := k + 1  # x 满足当前的同余条件，k 递增
            若终

            i := i + 1
        当终

        # 若 x 满足所有的同余条件，则找到一个解
        若始 (k == n)
            返回 x
        若终

        # 符合条件的解一定至少以最小的模数递增
        x := x + d
    当终

    # 返回 0 表示未找到
    返回 0
算终